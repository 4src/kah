#!/usr/bin/env bash 
#unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    *)          machine="UNKNOWN:${unameOut}"
esac

for x in gawk lua5.3 ispell; do 
  if [ "$machine" == "Linux" ]; then
    command -v $x > /dev/null || sudo apt install $x
  else
    echo "Please ensure $x is installed"
  fi
done

h() {  ## ,h              ;  show help
  printf "\nACTIONS:\n"
  gawk 'BEGIN        {FS="[(][)][:space:]*[^#]+##[:space:]*"}
        /^,/ && /##/ {printf(" %s\n",$2) }' , ; }

gp() {  ## gp             ;  commit all, push to github 
   git commit -am saving; git push; git status; }

lu() {  ## lu file       ;  run lua. 
   f=$1; shift
   lua $f.lua $*; }

snips() { ## snips file.md  ;  insert snips from code into markdown
  if  [[ -f "$1" ]]
  then 
    gawk 'function trim(s) {sub(/^[ \t\n]*/,"",s); sub(/[ \t\n]*$/,"",s); return s}

    PASS==1 && /^##/      { k="<"FILENAME" "$2">"    ; next     }
    PASS==1               { SNIP[k] = SNIP[k] sep $0 ; sep="\n" }
    PASS==2               { print }
    PASS==2 && /```julia/ { k=$2" "$3   
                            print(trim(SNIP[k]),"\n```")
                            USED[k]++
                            while(getline x >0) if (x ~ /^```/) break } 
    END { for(k in SNIP)
            if (USED[k] != 1) {
              print("?? used "(USED[k]+0)" time(s) "k)>"/dev/stderr" } }
    ' PASS=1 $H/src/*.lua PASS=2 $1 > _tmp
    mv _tmp $1 
  else 
    echo "missing $1.md or gawk"
  fi ; }

spell() { ## spell file.md  ;  spell check file
  ispell -x $1 ; }
  
tests() { ## ,tests          ;  run tests, update README badge
  s='1c![](https://img.shields.io/badge/tests-failing-red)'
  cd $H/src
  if lua sandbox.lua -g all ; then
    s='1c![](https://img.shields.io/badge/tests-passing-green)'
  fi
  sed -i $s $H/README.md; }

_hello() {
  tput bold; tput setaf 6; cat <<'EOF'

      _)\##
  ###/((_
       ))\####      UNLESS someone like you
     _((             cares a whole awful lot
####/  )\             nothing is going to get better.
     ,;;"`;,           It's not.
    (_______)
      \===/
      /===\  -- aat
EOF
  tput sgr0
}


here() { cd $1; basename `pwd`; }    

if  [ -z "$H" ]; then
  _hello
  H=`git rev-parse --show-toplevel`
  PROMPT_COMMAND='echo -ne "ðŸ’« $(git branch 2>/dev/null | grep '^*' | colrm 1 2):";PS1="$(here ..)/$(here .):\!\e[m â–¶ "'     
fi
